
jdbc.url =jdbc:mysql://127.0.0.1:3306/mdc?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8
jdbc.username=root
jdbc.password=root
driverClassName=com.mysql.jdbc.Driver

#初始化大小
initialSize =1
minIdle     =1
maxActive    =15

#配置获取连接等待超时时间 如果连接全部被占用，需要等待的时间。可以根据当前系统的响应时间判定，如果容忍度较高，可以大点。容忍度较低，设置小点。
maxWait=10000
#配置间隔多久才进行一次检测，检测需要关闭的空闲链接，单位是毫秒 连接有效性检测时间(单位:ms)
timeBetweenEvictionRunsMillis =60000
#配置一个连接在池中最小生存的时间，单位是毫秒
minEvictableIdleTimeMillis=300000

#尽量使用ping命令，ping的性能较查询语句高。大部分的数据库连接池不配置query语句，便会调用ping命令。
#不需要配置validationQuery，如果不配置的情况下会走ping命令，性能更高。
validationQuery                 =SELECT 'X'
#testWhileIdle(在获取连接后，确定是否要进行连接空闲时间的检查)。默认为true。配置里面不再进行设置。
testWhileIdle                   =true
testOnBorrow                    =false
testOnReturn                    =false

#打开PSCache,并且制定每个连接上PSCache的大小
#如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false
poolPreparedStatements                  = false
maxPoolPreparedStatementPerConnection = 20


#配置监控统计拦截的filters ，去掉后监控界面sql无法统计
#如果希望StatFilter统计的SQL执行时间内
fileters = stat,wall

#当程序存在缺陷时，申请的连接忘记关闭，这时候，就存在连接泄漏了。Druid提供了RemoveAbandanded相关配置，用来关闭长时间不使用的连接。
#配置removeAbandoned对性能会有一些影响，建议怀疑存在泄漏之后再打开。在上面的配置中，如果连接超过30分钟未关闭，就会被强行回收，并且日志记录连接申请时的调用堆栈
#当removeAbandoned=true之后，可以在内置监控界面datasource.html中的查看ActiveConnection StackTrace属性的，可以看到未关闭连接的具体堆栈信息，从而方便查出哪些连接泄漏了。
#打开removeAbandoned功能 如果没有连接池泄露 不要打开该功能，影响性能
removeAbandoned=true
#<!-- 1800秒，也就是30分钟 -->
removeAbandonedTimeout=1800
#<!-- 关闭abanded连接时输出错误日志 -->
logAbandoned=true

#设置数据库的类型
dbType=mysql
